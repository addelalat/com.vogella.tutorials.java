<section id="exercise_javacollections">
== Exercise: Use Java Collections
	
		Create a new Java project called
		`com.vogella.java.collections`
		. Also add a package with the same name.

	
	
		Create a Java class called
		<wordasword>Server</wordasword>
		with one String attribute called
		<property>url</property>
		.
	
	
		<programlisting language="java">
			<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
				parse="text" href="./examples/example/Server.java[]
----
	


	
		Create getter and setter methods for this attribute using code
		generation capabilities of Eclipse. For this select
		<menuchoice>
			<guimenu>Source</guimenu>
			<guisubmenu>Generate Getters and Setters</guisubmenu>
		</menuchoice>
		from the Eclipse menu.
	
	
		Create via Eclipse a constructor which gets a url as parameter. For
		this select
		<menuchoice>
			<guimenu>Source</guimenu>
			<guisubmenu>Generate Constructor using Fields...</guisubmenu>
		</menuchoice>
		from the Eclipse menu.
	
	
		Type
		`main`
		in the class body and use code completion (
		<keycombo>
			<keycap>Ctrl</keycap>
			<keycap>Space</keycap>
		</keycombo>
		) to generate a
		`main`
		method.
	
	
image::collectioncodecompletion10.png"
					scale="40" />
			</imageobject>
			<textobject>
				<phrase>Code completion</phrase>
			</textobject>
		</mediaobject>
	
	
		In your
		`main`
		 method create a
		`List`
		of type
		`ArrayList`
		and add 3 objects of type
		`Server`
		objects to this list.
	

	
		<programlisting language="java">
			<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
				parse="text" href="./examples/example/Main.java[]
----
	

	
		Use code completion to create a
		<guilabel>foreach</guilabel>
		loop and write the
		`toString`
		method to the console. Use code completion based on
		`syso`
		for that.
	
	Run your program.
	
		Use Eclipse to create a
		`toString`
		method based on the
		<property>url</property>
		parameter and re-run your program again.
	


