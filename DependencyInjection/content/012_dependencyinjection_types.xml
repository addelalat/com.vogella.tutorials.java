<section id="dependencyinjection_places">
== Where can objects be injected into a class according to JSR330?
	<indexterm>
		<primary>Constructor injection</primary>
	</indexterm>
	<indexterm>
		<primary>Field injection</primary>
	</indexterm>
	<indexterm>
		<primary>Method injection</primary>
	</indexterm>
	
		Dependency injection can be performed on:

		<itemizedlist>
			<listitem>
				
					the constructor of the class (construction injection)
				
			</listitem>
			<listitem>
				
					a field (field injection)
				
			</listitem>

			<listitem>
				
					the parameters of a method (method injection)
				
			</listitem>
		</itemizedlist>
	

	
		It is possible to use dependency injection on static and on
		non-static
		fields
		and
		methods. Avoiding dependency injection
		on static fields and methods is a good practice, as it has the following
		restrictions and can be hard to debug.
		<itemizedlist>
			<listitem>
				Static fields will be injected after the first object of the
					class was created via DI, which means no access to
					the static
					field in the constructor
				
			</listitem>
			<listitem>
				Static fields can not be marked as final, otherwise the
					compiler or the application complains at runtime about
					them
				
			</listitem>
			<listitem>
				Static methods are called only once after the first instance of
					the
					class was created
				
			</listitem>
		</itemizedlist>
	


