<section id="dependencyinjection_annotations">
	<title>Using annotations to describe class dependencies</title>
	<indexterm>
		<primary>Dependency injection</primary>
		<secondary>annotations</secondary>
	</indexterm>
	<indexterm>
		<primary>Annotations</primary>
	</indexterm>
	<indexterm>
		<primary>JSR 330</primary>
	</indexterm>
	<indexterm>
		<primary>@Inject</primary>
	</indexterm>
	<indexterm>
		<primary>@Named</primary>
	</indexterm>
	<para>Different approaches exist to describe the
		dependencies of a
		class. The most common approach is to use Java
		annotations to describe
		the dependencies directly in the class.
	</para>
	<para>
		The standard Java annotations for describing the dependencies of a class are
		defined
		in the Java
		Specification Request 330 (JSR330). This specification
		describes the
		<code>@Inject</code>
		and
		<code>@Named</code>
		annotations.
	</para>
	<para>
		The following listing shows a class which uses annotations to
		describe its dependencies.
	</para>

	<para>

		<programlisting language="java">
			<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
				href="../examples/snippets/Example.java" parse="text" />
		</programlisting>
	</para>
	<note>
		<para>
			Please note that this class uses the
			<code>new</code>
			operator for the user interface components. This implies that this
			part of the code is nothing you plan to replace via your tests and
			that you
			made the decision to have a hard coupling to the
			corresponding user interface toolkit.
		</para>
	</note>
</section>